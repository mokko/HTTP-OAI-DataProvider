name    = HTTP-OAI-DataProvider
author  = Maurice Mengel <mauricemengel@gmail.com>
license = Perl_5
copyright_holder = Maurice Mengel
copyright_year   = 2011

; TODO:
; currently we do not have META.json and other CPAN prerequisites since
; publication to CPAN is neither necessary nor imminent

; RELEASE HISTORY
;0.05 with query cache and chunking
;0.06 with dist::zilla

; if tag already exists dzil release will fail; first rm tag:
; git tag -d v0.006
; git push origin :refs/tags/v0.006
version = 0.006

; RELEASE STRATEGY (derived from OllyG)
; I don't want to upload to CPAN (yet)
; I want to push to github
; branch master (for Andreas) should be the built release
; branch devel should be the one I am working on
; that's pretty much like Dancer. I require from my developers
; that they use dzil, but not from my users who can simply install it
; from github, so:
; a) checkout devel and push to devel
; b) use dzil to release master. How exactly

; sane github defaults -> see
; http://search.cpan.org/~oliver/Dist-Zilla-PluginBundle-Author-OLIVER

[MetaResourcesFromGit]
[ReadmeFromPod]
[@Filter]
-bundle = @Basic
-remove = Readme
-remove = UploadToCPAN

; I want manual versions
; [AutoVersion]
; [NextRelease]
[PkgVersion] ; writes version from dist.ini in all *.pm files

;[PodWeaver]
[PickyPodWeaver] ; changes only POD with Abstract
[AutoPrereqs] ; put Prereqs in Makefile.PL
[MetaJSON] ; write META.json
[PruneFiles]
filenames = dist.ini
match     = ^bak/*
; rm old versions to overwrite with current versions later
filenames = Makefile.PL
;filenames = README

[Git::CommitBuild]
;don't know what 'branch = ' does
branch =
;release to master!
release_branch = master
message = <changelog section content>

[@Git]
commit_msg = Bumped changelog following rel. v%v

; tests
[Test::Version]
[CriticTests]
[PodCoverageTests]
[PodSyntaxTests]

;release
[FakeRelease]
;testRelease seems to be redndant
;[TestRelease]
;ConfirmRelease seems to be redndant
;[ConfirmRelease]

;GitPush gets executed after release
[Git::Push]
; pushes current branch (which should be devel)
; push_to defaults to origin: push_to = origin
; repeatable

;this is deprecated - new release strategy see above
;with new strategy I have README and Makefile.PL in master, but not in devel
;write to dist dir for github
;[CopyFilesFromBuild]
;copy = README
;copy = Makefile.PL
